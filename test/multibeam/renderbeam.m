function [l,y] = renderbeam( selectivity, numsrcmin, fs, duration )
  %%  renderbeam( selectivity, numsrcmin, fs, duration )
  if nargin < 2
    numsrcmin = 128;
  end
  if nargin < 3
    fs = 44100;
  end
  if nargin < 4
    duration = 1;
  end
  doc = tascar_xml_doc_new();
  e_session = tascar_xml_add_element( doc, doc, 'session', [], ...
                                      'license','CC0',...
                                      'duration',num2str(duration));
  e_scene = tascar_xml_add_element( doc, e_session, 'scene' );
  e_rec = tascar_xml_add_element( doc, e_scene, 'receiver', [], ...
                                  'type', 'omni' );
  az = 0:60:360;
  az = az(1:numel(selectivity));
  gain = 0:-6:-60;
  gain = gain(1:numel(selectivity));
  e_mask = tascar_xml_add_element( doc, e_rec, 'maskplugin', [], ...
                                   'type', 'multibeam', ...
                                   'az',num2str(az),...
                                   'gain',num2str(gain),...
                                   'numbeams',num2str(numel(selectivity)),...
                                   'selectivity',num2str(selectivity));
  if numsrcmin > 0
    srcp = gen_icosahedron();
    while size(srcp,1) < numsrcmin
      srcp = subdivide_mesh( srcp, 1 );
    end
    e_src = tascar_xml_add_element( doc, e_scene, 'source' );
    for k=1:size(srcp,1)
      e_snd = tascar_xml_add_element( doc, e_src, 'sound', [], ...
                                      'gain', num2str(-20*log10(size(srcp,1))), ...
                                      'delayline', 'false', ...
                                      'airabsorption', 'false', ...
                                      'x', num2str(srcp(k,1)), ...
                                      'y', num2str(srcp(k,2)),...
                                      'z', num2str(srcp(k,3)));
      e_plug = tascar_xml_add_element( doc, e_snd, 'plugins' );
      e_pink = tascar_xml_add_element( doc, e_plug, 'pink', [], ...
                                       'period',num2str(duration));
    end
  else
    e_src = tascar_xml_add_element( doc, e_scene, 'diffuse' );
    e_plug = tascar_xml_add_element( doc, e_src, 'plugins' );
    e_pink = tascar_xml_add_element( doc, e_plug, 'pink', [], ...
                                     'period',num2str(duration));
  end
  tascar_xml_save( doc, 'temp.tsc' );
  [y, sCfg] = tascar_renderscene( zeros(round(fs*duration),1), 'temp.tsc');
  l = 10*log10(mean(y.^2));
end

function m = gen_icosahedron
  phi = (1+sqrt(5))/2;
  m = [0,1,phi;...
       0,-1,-phi;...
       0,1,-phi;...
       0,-1,phi;...
       1,phi,0;...
       1,-phi,0;...
       -1,-phi,0;...
       -1,phi,0;...
       phi,0,1;...
       -phi,0,1;...
       phi,0,-1;...
       -phi,0,-1];
end

function m = subdivide_mesh( m, iter )
  for iteration = 1:iter
    chull = convhulln( m );
    for k=1:size(chull,1)
      t = mean(m(chull(k,:),:));
      m(end+1,:) = t;
    end
    for k=1:size(m,1)
      m(k,:) = m(k,:) / sqrt(sum(m(k,:).^2));
    end
  end
end
